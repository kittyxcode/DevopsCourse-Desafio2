name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up AWS credentials and region
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Cambia a tu regiÃ³n si es diferente

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        # Define the image tag based on the current timestamp
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        # Build the Docker image with the generated tag
        docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .

    - name: Push Docker image to ECR
      run: |
        # Push the Docker image to ECR with the generated tag
        docker push ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

    - name: Update ECS task definition with new image
      run: |
        # Update the ECS task definition JSON with the new image tag
        jq '.containerDefinitions[0].image = "${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"' task_definition.json > updated_task_definition.json

    - name: Register new ECS task definition
      run: |
        # Register the new ECS task definition
        aws ecs register-task-definition --cli-input-json file://updated_task_definition.json

    - name: Deploy to ECS
      run: |
        # Update the ECS service to use the new task definition
        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER }} \
          --service-name ${{ secrets.ECS_SERVICE_NAME }} \
          --task-definition $(jq -r '.family' updated_task_definition.json) \
          --desired-count 1
